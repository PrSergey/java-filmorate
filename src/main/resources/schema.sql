
DROP TABLE IF EXISTS films, genres, films_genres, users, friendships, likes_list, reviews, review_likes, event_feed CASCADE;


CREATE TABLE IF NOT EXISTS mpa_ratings
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(16) NOT NULL
);

CREATE TABLE IF NOT EXISTS films
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(255) NOT NULL,
    description  TEXT         NOT NULL,
    release_date DATE         NOT NULL,
    duration     INTEGER      NOT NULL,
    mpa_id       BIGINT REFERENCES MPA_ratings (id) ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS genres
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(64) NOT NULL
);

CREATE TABLE IF NOT EXISTS films_genres
(
    genre_id BIGINT REFERENCES genres (id) ON DELETE CASCADE,
    film_id  BIGINT REFERENCES films (id) ON DELETE CASCADE,
    UNIQUE (genre_id, film_id)
);

CREATE TABLE IF NOT EXISTS users
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR(64) UNIQUE NOT NULL,
    login    VARCHAR(64) UNIQUE NOT NULL,
    name     VARCHAR(255),
    birthday DATE
);

CREATE TABLE IF NOT EXISTS friendships
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id   BIGINT REFERENCES users (id) ON DELETE CASCADE,
    friend_id BIGINT REFERENCES users (id) ON DELETE CASCADE,
    UNIQUE (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS likes_list
(
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT REFERENCES users (id) ON DELETE CASCADE,
    film_id BIGINT REFERENCES films (id) ON DELETE CASCADE,
    UNIQUE (user_id, film_id)
);

CREATE TABLE IF NOT EXISTS reviews (
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content VARCHAR NOT NULL,
    is_positive BOOLEAN NOT NULL,
    user_id BIGINT NOT NULL,
    film_id BIGINT NOT NULL,
    CONSTRAINT user_id_review_fk FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT film_id_review_fk FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE

    );

CREATE TABLE IF NOT EXISTS review_likes (
    review_id   BIGINT NOT NULL,
    user_id     BIGINT NOT NULL,
    useful TINYINT NOT NULL,
    CONSTRAINT review_id_fk FOREIGN KEY (review_id) REFERENCES reviews (id) ON DELETE CASCADE,
    CONSTRAINT user_id_fk FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    PRIMARY KEY (review_id, user_id)
    );


CREATE TABLE IF NOT EXISTS event_feed
(
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT REFERENCES users (id) ON DELETE CASCADE,
    entity_id BIGINT,
    event_type varchar(50),
    operation varchar(50),
    timestamp BIGINT

);
